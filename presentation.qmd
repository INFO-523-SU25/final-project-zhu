---
title: "Forecasting Anomalies in AtHub's Stock Behavior"
subtitle: "INFO 523 - Summer 2025 - Final Project"
author: "Annabelle Zhu"
title-slide-attributes:
  data-background-image: images/watercolour_sys02_img34_teacup-ocean.jpg
  data-background-size: stretch
  data-background-opacity: "0.7"
  data-slide-number: none
format:
  revealjs:
    theme:  ['style/customtheming.scss']
    logo: images/stock-market.png
    footer: "INFO 523 Final Project | Annabelle Zhu"
    transition: fade
    slide-number: true
editor: visual
jupyter: python3
execute:
  echo: false
---

```{python}
#| label: load-packages
#| include: false
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np
```

```{python}
#| label: setup
#| include: false
#| 
# Set up plot theme and figure resolution
sns.set_theme(style="whitegrid")
sns.set_context("notebook", font_scale=1.1)

plt.rcParams['figure.dpi'] = 300
plt.rcParams['savefig.dpi'] = 300
plt.rcParams['figure.figsize'] = (6, 6 * 0.618)
```

```{python}
#| label: load-data
#| include: false
# Load data in Python
mtcars = sns.load_dataset('mpg').dropna()  # mtcars dataset is similar to the mpg dataset from seaborn
mtcars['speed'] = mtcars['horsepower'] / mtcars['weight']

penguins = sns.load_dataset('penguins').dropna()
```


# Market Anomaly Forecasting

## AtHub (603881.SH) Case Study

:::::: columns
::: {.column width="60%"}
**Project Focus**  
Predicting abnormal volatility (±5% price or 2× volume) using technical indicators

**Core Approach**  
- Binary classification of next-day anomalies  
- 30+ engineered technical features  
- Interpretable ML with SHAP analysis  
:::

::: {.column width="40%"}
![Shanghai Stock Exchange](images/shanghai-stock-exchange.jpeg){width=400px}
:::
::::::

::: notes
This project develops an early warning system for volatility anomalies in AtHub stock, a Chinese AI infrastructure company. We use market-based technical indicators to predict abnormal price and volume movements.
:::

---

# Research Questions

:::::: columns
::: {.column width="50%"}
```{=html}
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Q1. Prediction Horizon
</div>
</div>
<div class="callout-body-container callout-body">
Can TA features predict anomalies 1-3 days ahead?
</div>
</div>
```

```{=html}
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Q2. Feature Significance
</div>
</div>
<div class="callout-body-container callout-body">
Which features drive predictions? Do they align with financial theory?
</div>
</div>
```
:::

::: {.column width="50%"}
```{=html}
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Q3. Threshold Sensitivity
</div>
</div>
<div class="callout-body-container callout-body">
How do anomaly thresholds impact model performance?
</div>
</div>
```

![Technical Analysis Indicators](images/technical-analysis.png){width=400px}
:::
::::::

::: notes
We address three core research questions about prediction horizons, feature significance, and threshold sensitivity for anomaly detection in high-volatility stocks.
:::

---

# Key Findings: Prediction Horizons

```{python}
#| label: horizon-chart
#| fig-cap: "Anomaly Prediction Performance Over Next 3 Days"
#| fig-height: 5
# Simulated data for visualization
horizon_data = pd.DataFrame({
    'Horizon': ['1-day', '2-day', '3-day'],
    'Recall': [1.0, 1.0, 1.0],
    'Precision': [0.19, 0.19, 0.19],
    'Anomaly Rate': [0.15, 0.15, 0.15]
})

fig, ax1 = plt.subplots(figsize=(10, 5))
ax1.bar(np.arange(3)-0.2, horizon_data['Recall'], width=0.4, label='Recall', color='#1abc9c')
ax1.bar(np.arange(3)+0.2, horizon_data['Precision'], width=0.4, label='Precision', color='#3498db')
ax1.set_xticks(np.arange(3))
ax1.set_xticklabels(horizon_data['Horizon'])
ax1.set_ylabel('Score')
ax1.legend(loc='upper left')

ax2 = ax1.twinx()
ax2.plot(np.arange(3), horizon_data['Anomaly Rate'], 'ro-', label='Anomaly Rate')
ax2.set_ylabel('Anomaly Rate', color='r')
ax2.tick_params(axis='y', labelcolor='r')
ax2.set_ylim(0, 0.3)

plt.title('Anomaly Prediction Across Horizons', fontsize=16)
plt.tight_layout()
plt.show()
```

::: notes
Models achieve perfect recall across all horizons but with low precision (19%). TA features contain predictive signals but require refinement to reduce false positives.
:::

---

# Feature Significance: SHAP Analysis

```{python}
#| label: shap-plot
#| fig-cap: "Dominant Feature: RSI-Volume Interaction"
#| fig-height: 5
# Simulated SHAP values
features = ['rsi_vol_interaction', 'obv_atr_interaction', 'macd_vol_interaction', 
            'momentum_rsi', 'log_vol', 'volatility_atr']
shap_values = [0.85, 0.05, 0.04, 0.03, 0.02, 0.01]

plt.figure(figsize=(10, 5))
sns.barplot(x=shap_values, y=features, palette='Blues_r')
plt.title('Top Features by SHAP Value', fontsize=16)
plt.xlabel('Mean |SHAP|', fontsize=12)
plt.ylabel('Feature', fontsize=12)
plt.grid(axis='x', alpha=0.3)
plt.show()
```

::: notes
RSI-Volume interaction dominates predictions, aligning with financial theory that momentum + volume surges signal volatility. Model oversimplifies by relying primarily on one feature.
:::

---

# Threshold Sensitivity Analysis

```{python}
#| label: threshold-chart
#| fig-cap: "Optimal Threshold: ±3% Price & 1.8× Volume"
#| fig-height: 5
# Simulated threshold performance
thresholds = ['±3% & 1.8×', '±3% & 2.0×', '±3% & 2.5×', 
              '±5% & 1.8×', '±5% & 2.0×', '±5% & 2.5×',
              '±7% & 1.8×', '±7% & 2.0×', '±7% & 2.5×']
f1_scores = [0.41, 0.38, 0.35, 0.35, 0.33, 0.30, 0.25, 0.22, 0.18]

plt.figure(figsize=(10, 6))
sns.barplot(x=f1_scores, y=thresholds, palette='viridis')
plt.title('F1 Scores by Threshold Combination', fontsize=16)
plt.xlabel('F1 Score', fontsize=12)
plt.ylabel('Price & Volume Thresholds', fontsize=12)
plt.grid(axis='x', alpha=0.3)
plt.xlim(0, 0.5)
plt.tight_layout()
plt.show()
```

::: notes
±3% price change + 1.8× volume delivers best F1 (0.41) with 97% recall. Higher thresholds reduce false positives but miss important signals.
:::

---

# Economic Significance

```{python}
#| label: returns-chart
#| fig-cap: "Average Returns by Threshold Level"
#| fig-height: 5
# Simulated returns data
thresholds = ['±3%', '±5%', '±7%']
returns = [4.1, 6.8, 9.2]

plt.figure(figsize=(8, 5))
sns.barplot(x=thresholds, y=returns, palette='rocket')
plt.axhline(y=5, color='r', linestyle='--', alpha=0.7)
plt.text(0.5, 5.2, '5% Return Benchmark', color='r')
plt.title('Average Absolute Returns by Threshold', fontsize=16)
plt.xlabel('Price Threshold', fontsize=12)
plt.ylabel('Average Return (%)', fontsize=12)
plt.grid(axis='y', alpha=0.3)
plt.show()
```

::: notes
All thresholds identify economically significant moves (>5% returns). Stricter thresholds capture larger but rarer anomalies.
:::

---

# Practical Applications

:::::: columns
::: {.column width="50%"}
**Trading Strategies**  
- ±7% threshold for high-conviction trades  
- Position sizing based on SHAP values  

**Risk Management**  
- ±3% threshold for stop-loss triggers  
- Real-time monitoring of RSI-volume spikes  

**Portfolio Protection**  
- Anomaly alerts for hedging decisions  
- Volatility forecasting for option pricing  
:::

::: {.column width="50%"}
![Trading Dashboard Concept](images/trading-dashboard.png){width=450px}
:::
::::::

::: notes
The framework provides actionable insights for traders, risk managers, and portfolio constructors, with threshold selection depending on use case requirements.
:::

---

# Conclusion & Future Work

**Key Contributions**  
✅ Demonstrated predictive power of TA features for volatility anomalies  
✅ Identified RSI-volume interaction as dominant predictor  
✅ Established optimal threshold combinations for different use cases  

**Limitations & Next Steps**  
- Develop precision-focused models to reduce false positives  
- Incorporate alternative data sources (news, sentiment)  
- Test dynamic thresholding approaches  
- Expand to sector-wide anomaly detection  

```{=html}
<center>
<img src="images/future-work.png" width="500px">
</center>
```

::: notes
This work establishes a foundation for interpretable anomaly detection in high-volatility stocks, with promising extensions to real-time trading systems.
:::
```
